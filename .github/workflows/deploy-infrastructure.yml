name: Deploy Infrastructure (Terraform)

on:
  push:
    branches: [ main ]
    paths:
      - 'microhapDB-frontend/terraform/**'
      - '.github/workflows/deploy-infrastructure.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'microhapDB-frontend/terraform/**'
      - '.github/workflows/deploy-infrastructure.yml'
  workflow_dispatch:

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'us-east-1'

jobs:
  terraform-plan:
    name: 🏗️ Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: microhapDB-frontend/terraform
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🚀 Terraform Init
        run: terraform init

      - name: 🔍 Terraform Validate
        run: terraform validate

      - name: 📋 Terraform Plan
        run: |
          terraform plan \
            -var="backend_url=${{ secrets.VUE_APP_BACKEND_URL }}" \
            -out=tfplan
        
      - name: 💬 Comment PR with Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');
            
            try {
              const plan = execSync('cd microhapDB-frontend/terraform && terraform show -no-color tfplan', { encoding: 'utf8' });
              
              const comment = `## 🏗️ Terraform Infrastructure Plan
              
              <details>
              <summary>Click to expand plan</summary>
              
              \`\`\`
              ${plan}
              \`\`\`
              
              </details>`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Error creating comment:', error);
            }

  terraform-apply:
    name: 🚀 Deploy Infrastructure
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    defaults:
      run:
        working-directory: microhapDB-frontend/terraform
    
    outputs:
      s3-bucket: ${{ steps.terraform-output.outputs.s3_bucket_name }}
      cloudfront-id: ${{ steps.terraform-output.outputs.cloudfront_distribution_id }}
      website-url: ${{ steps.terraform-output.outputs.website_url }}

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🚀 Terraform Init
        run: terraform init

      - name: 🔍 Terraform Validate
        run: terraform validate

      - name: 🏗️ Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="backend_url=${{ secrets.VUE_APP_BACKEND_URL }}"

      - name: 📤 Get Terraform Outputs
        id: terraform-output
        run: |
          echo "s3_bucket_name=$(terraform output -raw s3_bucket_name)" >> $GITHUB_OUTPUT
          echo "cloudfront_distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
          echo "website_url=$(terraform output -raw website_url)" >> $GITHUB_OUTPUT
          echo "cloudfront_domain=$(terraform output -raw cloudfront_domain_name)" >> $GITHUB_OUTPUT

      - name: 📊 Infrastructure Summary
        run: |
          echo "## 🏗️ Infrastructure Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Resource | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🪣 S3 Bucket | ${{ steps.terraform-output.outputs.s3_bucket_name }} |" >> $GITHUB_STEP_SUMMARY
          echo "| ☁️ CloudFront ID | ${{ steps.terraform-output.outputs.cloudfront_distribution_id }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🌐 Website URL | ${{ steps.terraform-output.outputs.website_url }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Management Links" >> $GITHUB_STEP_SUMMARY
          echo "- [S3 Console](https://s3.console.aws.amazon.com/s3/buckets/${{ steps.terraform-output.outputs.s3_bucket_name }})" >> $GITHUB_STEP_SUMMARY
          echo "- [CloudFront Console](https://console.aws.amazon.com/cloudfront/v3/home#/distributions/${{ steps.terraform-output.outputs.cloudfront_distribution_id }})" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 GitHub Secrets Updated" >> $GITHUB_STEP_SUMMARY
          echo "Make sure these secrets are set in your repository:" >> $GITHUB_STEP_SUMMARY
          echo "- \`S3_BUCKET_NAME\`: ${{ steps.terraform-output.outputs.s3_bucket_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- \`CLOUDFRONT_DISTRIBUTION_ID\`: ${{ steps.terraform-output.outputs.cloudfront_distribution_id }}" >> $GITHUB_STEP_SUMMARY

  cleanup-on-failure:
    name: 🧹 Cleanup on Failure
    runs-on: ubuntu-latest
    if: failure() && github.ref == 'refs/heads/main'
    needs: [terraform-apply]
    defaults:
      run:
        working-directory: microhapDB-frontend/terraform
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🚀 Terraform Init
        run: terraform init

      - name: ⚠️ Infrastructure Failure Notice
        run: |
          echo "⚠️ Infrastructure deployment failed. Manual intervention may be required." >> $GITHUB_STEP_SUMMARY
          echo "Check the Terraform state and consider running 'terraform destroy' if needed." >> $GITHUB_STEP_SUMMARY
          echo "Terraform destroy is commented out for safety - manual review required." >> $GITHUB_STEP_SUMMARY
          # terraform destroy -auto-approve -var="backend_url=${{ secrets.VUE_APP_BACKEND_URL }}" 